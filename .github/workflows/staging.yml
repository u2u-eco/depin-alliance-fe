# This workflow will build and push a new container image to Amazon ECR
#
# To use this workflow, you will need to complete the following set-up steps:
name: Staging
on:
  push:
    branches: [ staging ]

# This is what will cancel the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: k8s-prod
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}

        directory: .
        file_name: .env
        fail_on_empty: false

    - name: Build Image
      id: build-image
      env:
        DEV_ECR_REGISTRY: ${{ secrets.DEV_ECR_REGISTRY }}
      run: |
        cp .env .prod.env
        cp .prod.env .env.production
        SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`

        echo "Build a docker container and push it to ECR" 
        echo "Image: $DEV_ECR_REGISTRY/${{ vars.U2U_SERVICE_NAME }}:${GITHUB_REF#refs/*/}-$SHORT_SHA"
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA --build-arg GIT_TAG=${GITHUB_REF#refs/*/} --build-arg COMPILED_AT=$(date +'%Y-%m-%dT%H:%M:%S') -f ${{ vars.DOCKERFILE_PATH }} -t $DEV_ECR_REGISTRY/${{ vars.U2U_SERVICE_NAME }}:${GITHUB_REF#refs/*/}-$SHORT_SHA -t $DEV_ECR_REGISTRY/${{ vars.U2U_SERVICE_NAME }}:${GITHUB_REF#refs/*/} .

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Push image to Amazon ECR
      id: push-image
      env:
        DEV_ECR_REGISTRY: ${{ secrets.DEV_ECR_REGISTRY }}
      run: |
        SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`

        echo "Pushing image to ECR..."
        docker push $DEV_ECR_REGISTRY/${{ vars.U2U_SERVICE_NAME }}:${GITHUB_REF#refs/*/}
        docker push $DEV_ECR_REGISTRY/${{ vars.U2U_SERVICE_NAME }}:${GITHUB_REF#refs/*/}-$SHORT_SHA

  deploy:
    name: deploy
    needs: build
    runs-on: k8s-develop
    environment: staging

    steps:
    - uses: actions/checkout@v4
      name: Check out code repo K8S Deployment Manifest
      with:
        repository: ${{ secrets.K8S_MANIFEST_REPO_DEV }}
        token: ${{ secrets.CI_PUSH_TOKEN }}

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.8.8"

    - name: Update Kubernetes resources
      env:
        GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      run: |
        git config --global user.email "ci@u2u.com"
        git config --global user.name "DevOps"
        git checkout master

        echo "Update newimage with kustomize"
        SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`

        cd ${{ vars.KUSTOMIZE_PROJECT_PATH }}/staging
        kustomize edit set image ${{ secrets.DEV_ECR_REGISTRY }}/${{ vars.U2U_SERVICE_NAME }}:${GITHUB_REF#refs/*/}-$SHORT_SHA
        cat kustomization.yaml
        git commit -am "[${{ github.repository }}] $GITHUB_ACTOR - $GITHUB_COMMIT_MESSAGE" || true
        git push -u origin master
